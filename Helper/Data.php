<?php eval(base64_decode("LyoqICogR29NYWdlLmNvbSAqICogR29NYWdlIEZlZWQgUHJvIE0yICogKiBAY2F0ZWdvcnkgRXh0ZW5zaW9uICogQGNvcHlyaWdodCBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxOCBHb01hZ2UuY29tIChodHRwczovL3d3dy5nb21hZ2UuY29tKSAqIEBhdXRob3IgR29NYWdlLmNvbSAqIEBsaWNlbnNlIGh0dHBzOi8vd3d3LmdvbWFnZS5jb20vbGljZW5zaW5nIFNpbmdsZSBkb21haW4gbGljZW5zZSAqIEB0ZXJtcyBvZiB1c2UgaHR0cHM6Ly93d3cuZ29tYWdlLmNvbS90ZXJtcy1vZi11c2UgKiBAdmVyc2lvbiBSZWxlYXNlOiAxLjEuMSAqIEBzaW5jZSBDbGFzcyBhdmFpbGFibGUgc2luY2UgUmVsZWFzZSAxLjAuMCAqLyBuYW1lc3BhY2UgR29NYWdlXEZlZWRcSGVscGVyOyB1c2UgTWFnZW50b1xGcmFtZXdvcmtcQXBwXEZpbGVzeXN0ZW1cRGlyZWN0b3J5TGlzdDsgY2xhc3MgRGF0YSB7IC8qKiAqIEB2YXIgXE1hZ2VudG9cQ2F0YWxvZ1xNb2RlbFxSZXNvdXJjZU1vZGVsXFByb2R1Y3RcQXR0cmlidXRlXENvbGxlY3Rpb25GYWN0b3J5ICovIHByb3RlY3RlZCAkX2F0dHJpYnV0ZUNvbGxlY3Rpb25GYWN0b3J5OyAvKiogKiBAdmFyIFxHb01hZ2VcRmVlZFxNb2RlbFxSZXNvdXJjZU1vZGVsXEF0dHJpYnV0ZVxDb2xsZWN0aW9uICovIHByb3RlY3RlZCAkX2R5bmFtaWNBdHRyaWJ1dGVDb2xsZWN0aW9uOyAvKiogKiBAdmFyIFxNYWdlbnRvXFN0b3JlXE1vZGVsXFN0b3JlTWFuYWdlckludGVyZmFjZSAqLyBwcm90ZWN0ZWQgJF9zdG9yZU1hbmFnZXI7IC8qKiAqIEB2YXIgXE1hZ2VudG9cU3RvcmVcTW9kZWxcU3lzdGVtXFN0b3JlICovIHByb3RlY3RlZCAkX3N5c3RlbVN0b3JlOyAvKiogKiBAdmFyIFxNYWdlbnRvXEZyYW1ld29ya1xGaWxlc3lzdGVtXERpcmVjdG9yeVxSZWFkSW50ZXJmYWNlICovIHByb3RlY3RlZCAkX2RpcmVjdG9yeTsgLyoqICogQHZhciBcTWFnZW50b1xGcmFtZXdvcmtcU3RkbGliXERhdGVUaW1lXERhdGVUaW1lICovIHByb3RlY3RlZCAkX2RhdGVUaW1lOyAvKiogKiBAdmFyIFxNYWdlbnRvXEZyYW1ld29ya1xNb2R1bGVcTW9kdWxlTGlzdEludGVyZmFjZSAqLyBwcm90ZWN0ZWQgJF9tb2R1bGVMaXN0OyAvKiogKiBAdmFyIFxNYWdlbnRvXEZyYW1ld29ya1xKc29uXEhlbHBlclxEYXRhICovIHByb3RlY3RlZCAkX2pzb25IZWxwZXI7IC8qKiAqIEB2YXIgXE1hZ2VudG9cRnJhbWV3b3JrXEVuY3J5cHRpb25cRW5jcnlwdG9ySW50ZXJmYWNlICovIHByb3RlY3RlZCAkX2VuY3J5cHRvcjsgLyoqICogQHZhciBcR29NYWdlXEZlZWRcTW9kZWxcTWFwcGVyXEZhY3RvcnkgKi8gcHJvdGVjdGVkICRfbWFwcGVyRmFjdG9yeTsgLyoqICogQHZhciBcTWFnZW50b1xGcmFtZXdvcmtcT2JqZWN0TWFuYWdlckludGVyZmFjZSAqLyBwcm90ZWN0ZWQgJF9vYmplY3RNYW5hZ2VyOyAvKiogKiBAdmFyIFxNYWdlbnRvXEZyYW1ld29ya1xBcHBcQ29uZmlnXFNjb3BlQ29uZmlnSW50ZXJmYWNlICovIHByb3RlY3RlZCAkX3Njb3BlQ29uZmlnOyBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoIFxNYWdlbnRvXEZyYW1ld29ya1xPYmplY3RNYW5hZ2VySW50ZXJmYWNlICRvYmplY3RNYW5hZ2VyICkgeyAkdGhpcy0+X29iamVjdE1hbmFnZXIgPSAkb2JqZWN0TWFuYWdlcjsgJHRoaXMtPl9hdHRyaWJ1dGVDb2xsZWN0aW9uRmFjdG9yeSA9ICRvYmplY3RNYW5hZ2VyLT5nZXQoJ01hZ2VudG9cQ2F0YWxvZ1xNb2RlbFxSZXNvdXJjZU1vZGVsXFByb2R1Y3RcQXR0cmlidXRlXENvbGxlY3Rpb25GYWN0b3J5Jyk7ICR0aGlzLT5fZHluYW1pY0F0dHJpYnV0ZUNvbGxlY3Rpb24gPSAkb2JqZWN0TWFuYWdlci0+Z2V0KCdHb01hZ2VcRmVlZFxNb2RlbFxSZXNvdXJjZU1vZGVsXEF0dHJpYnV0ZVxDb2xsZWN0aW9uJyk7ICRmaWxlc3lzdGVtID0gJG9iamVjdE1hbmFnZXItPmdldCgnTWFnZW50b1xGcmFtZXdvcmtcRmlsZXN5c3RlbScpOyAkdGhpcy0+X2RpcmVjdG9yeSA9ICRmaWxlc3lzdGVtLT5nZXREaXJlY3RvcnlSZWFkKERpcmVjdG9yeUxpc3Q6Ok1FRElBKTsgJHRoaXMtPl9zdG9yZU1hbmFnZXIgPSAkb2JqZWN0TWFuYWdlci0+Z2V0KCdNYWdlbnRvXFN0b3JlXE1vZGVsXFN0b3JlTWFuYWdlcicpOyAkdGhpcy0+X3N5c3RlbVN0b3JlID0gJG9iamVjdE1hbmFnZXItPmdldCgnTWFnZW50b1xTdG9yZVxNb2RlbFxTeXN0ZW1cU3RvcmUnKTsgJHRoaXMtPl9kYXRlVGltZSA9ICRvYmplY3RNYW5hZ2VyLT5nZXQoJ01hZ2VudG9cRnJhbWV3b3JrXFN0ZGxpYlxEYXRlVGltZVxEYXRlVGltZScpOyAkdGhpcy0+X21vZHVsZUxpc3QgPSAkb2JqZWN0TWFuYWdlci0+Z2V0KCdNYWdlbnRvXEZyYW1ld29ya1xNb2R1bGVcTW9kdWxlTGlzdCcpOyAkdGhpcy0+X2pzb25IZWxwZXIgPSAkb2JqZWN0TWFuYWdlci0+Z2V0KCdNYWdlbnRvXEZyYW1ld29ya1xKc29uXEhlbHBlclxEYXRhJyk7ICR0aGlzLT5fZW5jcnlwdG9yID0gJG9iamVjdE1hbmFnZXItPmdldCgnTWFnZW50b1xGcmFtZXdvcmtcRW5jcnlwdGlvblxFbmNyeXB0b3InKTsgJHRoaXMtPl9tYXBwZXJGYWN0b3J5ID0gJG9iamVjdE1hbmFnZXItPmdldCgnR29NYWdlXEZlZWRcTW9kZWxcTWFwcGVyXEZhY3RvcnknKTsgJHRoaXMtPl9zY29wZUNvbmZpZyA9ICRvYmplY3RNYW5hZ2VyLT5nZXQoJ01hZ2VudG9cRnJhbWV3b3JrXEFwcFxDb25maWcnKTsgfSAvKiogKiBAcmV0dXJuIGFycmF5ICovIHB1YmxpYyBmdW5jdGlvbiBnZXRQcm9kdWN0QXR0cmlidXRlcygpIHsgJGF0dHJpYnV0ZXMgPSAkdGhpcy0+X2F0dHJpYnV0ZUNvbGxlY3Rpb25GYWN0b3J5LT5jcmVhdGUoKS0+YWRkVmlzaWJsZUZpbHRlcigpLT5nZXRJdGVtcygpOyAkY3VzdG9tTWFwcGVycyA9ICR0aGlzLT5fbWFwcGVyRmFjdG9yeS0+Z2V0Q3VzdG9tTWFwcGVycygpOyBmb3JlYWNoICgkYXR0cmlidXRlcyBhcyAka2V5ID0+ICRhdHRyaWJ1dGUpIHsgaWYgKGlzc2V0KCRjdXN0b21NYXBwZXJzWyRhdHRyaWJ1dGUtPmdldEF0dHJpYnV0ZUNvZGUoKV0pKSB7IHVuc2V0KCRhdHRyaWJ1dGVzWyRrZXldKTsgfSB9ICRhdHRyaWJ1dGVMaXN0ID0gW107IGZvcmVhY2ggKCRhdHRyaWJ1dGVzIGFzICRhdHRyaWJ1dGUpIHsgaWYgKCRhdHRyaWJ1dGUtPmdldFN0b3JlTGFiZWwoKSkgeyAkYXR0cmlidXRlTGlzdFtdID0gWyAndmFsdWUnID0+ICRhdHRyaWJ1dGUtPmdldEF0dHJpYnV0ZUNvZGUoKSwgJ2xhYmVsJyA9PiAkYXR0cmlidXRlLT5nZXRTdG9yZUxhYmVsKCkgXTsgfSB9IGZvcmVhY2ggKCRjdXN0b21NYXBwZXJzIGFzICR2YWx1ZSA9PiAkY2xhc3MpIHsgJGF0dHJpYnV0ZUxpc3RbXSA9IFsgJ3ZhbHVlJyA9PiAkdmFsdWUsICdsYWJlbCcgPT4gJGNsYXNzOjpnZXRMYWJlbCgpIF07IH0gdXNvcnQoJGF0dHJpYnV0ZUxpc3QsIGZ1bmN0aW9uICgkYSwgJGIpIHsgcmV0dXJuIHN0cmNtcCgkYVsnbGFiZWwnXSwgJGJbJ2xhYmVsJ10pOyB9ICk7IHJldHVybiAkYXR0cmlidXRlTGlzdDsgfSAvKiogKiBAcmV0dXJuIGFycmF5ICovIHB1YmxpYyBmdW5jdGlvbiBnZXREeW5hbWljQXR0cmlidXRlcygpIHsgJGF0dHJpYnV0ZXMgPSAkdGhpcy0+X2R5bmFtaWNBdHRyaWJ1dGVDb2xsZWN0aW9uLT5sb2FkKCktPmdldEl0ZW1zKCk7ICRhdHRyaWJ1dGVzID0gYXJyYXlfbWFwKGZ1bmN0aW9uIChcR29NYWdlXEZlZWRcTW9kZWxcQXR0cmlidXRlICRhdHRyaWJ1dGUpIHsgcmV0dXJuIFsgJ3ZhbHVlJyA9PiAkYXR0cmlidXRlLT5nZXRDb2RlKCksICdsYWJlbCcgPT4gJGF0dHJpYnV0ZS0+Z2V0TmFtZSgpIF07IH0sICRhdHRyaWJ1dGVzICk7IHVzb3J0KCRhdHRyaWJ1dGVzLCBmdW5jdGlvbiAoJGEsICRiKSB7IHJldHVybiBzdHJjbXAoJGFbJ2xhYmVsJ10sICRiWydsYWJlbCddKTsgfSApOyByZXR1cm4gJGF0dHJpYnV0ZXM7IH0gLyoqICogQHBhcmFtIHN0cmluZyAkZmlsZU5hbWUgKiBAcGFyYW0gaW50ICRzdG9yZUlkICogQHJldHVybiBzdHJpbmcgKi8gcHVibGljIGZ1bmN0aW9uIGdldEZlZWRVcmwoJGZpbGVOYW1lID0gJycsICRzdG9yZUlkID0gMCkgeyBpZiAoJGZpbGVOYW1lICYmICRzdG9yZUlkKSB7ICRwYXRoID0gJHRoaXMtPmdldEZlZWRQYXRoKCRmaWxlTmFtZSk7IGlmICgkcGF0aCkgeyByZXR1cm4gJHRoaXMtPl9zdG9yZU1hbmFnZXItPmdldFN0b3JlKCRzdG9yZUlkKS0+Z2V0QmFzZVVybCggXE1hZ2VudG9cRnJhbWV3b3JrXFVybEludGVyZmFjZTo6VVJMX1RZUEVfTUVESUEgKSAuICRwYXRoOyB9IH0gcmV0dXJuICcnOyB9IC8qKiAqIEBwYXJhbSBzdHJpbmcgJGZpbGVOYW1lICogQHJldHVybiBzdHJpbmcgKi8gcHVibGljIGZ1bmN0aW9uIGdldEZlZWRQYXRoKCRmaWxlTmFtZSwgJGFic29sdXRlID0gZmFsc2UpIHsgJHBhdGggPSBcR29NYWdlXEZlZWRcTW9kZWxcV3JpdGVyXFdyaXRlckludGVyZmFjZTo6RElSRUNUT1JZIC4gJy8nIC4gJGZpbGVOYW1lOyBpZiAoJHRoaXMtPl9kaXJlY3RvcnktPmlzRXhpc3QoJHBhdGgpKSB7IHJldHVybiAkYWJzb2x1dGUgPyAkdGhpcy0+X2RpcmVjdG9yeS0+Z2V0QWJzb2x1dGVQYXRoKCRwYXRoKSA6ICRwYXRoOyB9IHJldHVybiAnJzsgfSAvKiogKiBAcGFyYW0gaW50ICRpbnRlcnZhbCAqIEBwYXJhbSBpbnQgJGhvdXJGcm9tICogQHBhcmFtIGludCAkaG91clRvICogQHBhcmFtIHN0cmluZyAkbGFzdFJ1biAqIEByZXR1cm4gYm9vbCAqLyBwdWJsaWMgZnVuY3Rpb24gbmVlZFJ1bkNyb24oJGludGVydmFsLCAkaG91ckZyb20sICRob3VyVG8sICRsYXN0UnVuKSB7ICRjdXJyZW50ID0gJHRoaXMtPl9kYXRlVGltZS0+Z210RGF0ZSgnRycpOyAkbGFzdFJ1biA9ICRsYXN0UnVuID8gJHRoaXMtPl9kYXRlVGltZS0+Z210VGltZXN0YW1wKCRsYXN0UnVuKSA6IDA7IHN3aXRjaCAoJGludGVydmFsKSB7IGNhc2UgMTI6IGNhc2UgMjQ6IGlmICgkaG91ckZyb20gIT0gJGN1cnJlbnQpIHsgcmV0dXJuIGZhbHNlOyB9IGlmICgoJGxhc3RSdW4gKyAkaW50ZXJ2YWwgKiA2MCAqIDYwKSA+ICR0aGlzLT5fZGF0ZVRpbWUtPmdtdFRpbWVzdGFtcCgpKSB7IHJldHVybiBmYWxzZTsgfSBicmVhazsgZGVmYXVsdDogaWYgKCEkaG91clRvKSB7ICRob3VyVG8gPSAyNDsgfSAkaG91cnMgPSBbXTsgaWYgKCRob3VyRnJvbSA+ICRob3VyVG8pIHsgZm9yICgkaSA9ICRob3VyRnJvbTsgJGkgPD0gMjM7ICRpKyspIHsgJGhvdXJzW10gPSAkaTsgfSBmb3IgKCRpID0gMDsgJGkgPD0gJGhvdXJUbzsgJGkrKykgeyAkaG91cnNbXSA9ICRpOyB9IH0gZWxzZSB7IGZvciAoJGkgPSAkaG91ckZyb207ICRpIDw9ICRob3VyVG87ICRpKyspIHsgaWYgKCRpID09IDI0KSB7ICRob3Vyc1tdID0gMDsgfSBlbHNlIHsgJGhvdXJzW10gPSAkaTsgfSB9IH0gaWYgKCFpbl9hcnJheSgkY3VycmVudCwgJGhvdXJzKSkgeyByZXR1cm4gZmFsc2U7IH0gaWYgKCgkbGFzdFJ1biArICRpbnRlcnZhbCAqIDYwICogNjApID4gJHRoaXMtPl9kYXRlVGltZS0+Z210VGltZXN0YW1wKCkpIHsgcmV0dXJuIGZhbHNlOyB9IH0gcmV0dXJuIHRydWU7IH0gLyoqICogQHJldHVybiBhcnJheSAqLyBwdWJsaWMgZnVuY3Rpb24gZ2V0QXZhaWxhYmxlV2Vic2l0ZXMoKSB7IGlmICghJHRoaXMtPl9zY29wZUNvbmZpZy0+Z2V0VmFsdWUoJ2dvbWFnZV9hY3RpdmF0aW9uL2ZlZWQvaW5zdGFsbGVkJykgfHwgKGludHZhbCgkdGhpcy0+X3Njb3BlQ29uZmlnLT5nZXRWYWx1ZSgnZ29tYWdlX2FjdGl2YXRpb24vZmVlZC9jb3VudCcpKSA+IDEwKSApIHsgcmV0dXJuIFtdOyB9ICR0aW1lX3RvX3VwZGF0ZSA9IDYwICogNjAgKiAyNCAqIDE1OyAkciA9ICR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2VfYWN0aXZhdGlvbi9mZWVkL2FyJyk7ICR0ID0gJHRoaXMtPl9zY29wZUNvbmZpZy0+Z2V0VmFsdWUoJ2dvbWFnZV9hY3RpdmF0aW9uL2ZlZWQvdGltZScpOyAkcyA9ICR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2VfYWN0aXZhdGlvbi9mZWVkL3dlYnNpdGVzJyk7ICRsYXN0X2NoZWNrID0gc3RyX3JlcGxhY2UoJHIsICcnLCAkdGhpcy0+X2VuY3J5cHRvci0+ZGVjcnlwdCgkdCkpOyAkc2l0ZXMgPSBleHBsb2RlKCcsJywgc3RyX3JlcGxhY2UoJHIsICcnLCAkdGhpcy0+X2VuY3J5cHRvci0+ZGVjcnlwdCgkcykpKTsgJHNpdGVzID0gYXJyYXlfZGlmZigkc2l0ZXMsIFsnJ10pOyBpZiAoKCRsYXN0X2NoZWNrICsgJHRpbWVfdG9fdXBkYXRlKSA8ICR0aGlzLT5fZGF0ZVRpbWUtPmdtdFRpbWVzdGFtcCgpKSB7ICR0aGlzLT5hKChpbnQpJHRoaXMtPl9zY29wZUNvbmZpZy0+Z2V0VmFsdWUoJ2dvbWFnZV9hY3RpdmF0aW9uL2ZlZWQvY291bnQnKSwgaW1wbG9kZSgnLCcsICRzaXRlcykgKTsgfSByZXR1cm4gJHNpdGVzOyB9IHB1YmxpYyBmdW5jdGlvbiBhKCRjID0gMCwgJHMgPSAnJykgeyAkayA9ICR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2Vfc2V0dGluZ3MvZmVlZC9rZXknKTsgLyoqIEB2YXIgXE1hZ2VudG9cQ29uZmlnXE1vZGVsXENvbmZpZyAkY29uZmlnICovICRjb25maWcgPSAkdGhpcy0+X29iamVjdE1hbmFnZXItPmNyZWF0ZSgnTWFnZW50b1xDb25maWdcTW9kZWxcQ29uZmlnJyk7ICRjaCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCBzcHJpbnRmKCdodHRwczovL3d3dy5nb21hZ2UuY29tL2luZGV4LnBocC9nb21hZ2VfZG93bmxvYWRhYmxlL2tleS9jaGVjaycpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVEZJRUxEUywgJ2tleT0nIC4gdXJsZW5jb2RlKCRrKSAuICcmc2t1PWZlZWQtcHJvLW0yJmRvbWFpbnM9JyAuIHVybGVuY29kZShpbXBsb2RlKCcsJywgJHRoaXMtPl9nZXREb21haW5zKCkpKSAuICcmdmVyPScgLiB1cmxlbmNvZGUoJHRoaXMtPl9nZXRWZXJzaW9uKCkpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1RJTUVPVVQsIDMwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCAwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllIT1NULCAwKTsgJGNvbnRlbnQgPSBjdXJsX2V4ZWMoJGNoKTsgdHJ5IHsgJHIgPSAkdGhpcy0+X2pzb25IZWxwZXItPmpzb25EZWNvZGUoJGNvbnRlbnQpOyB9IGNhdGNoIChcRXhjZXB0aW9uICRlKSB7ICRyID0gW107IH0gaWYgKGVtcHR5KCRyKSkgeyAkdmFsdWUxID0gJHRoaXMtPl9zY29wZUNvbmZpZy0+Z2V0VmFsdWUoJ2dvbWFnZV9hY3RpdmF0aW9uL2ZlZWQvYXInKTsgJGdyb3VwcyA9IFsgJ2ZlZWQnID0+IFsgJ2ZpZWxkcycgPT4gWyAnYXInID0+IFsndmFsdWUnID0+ICR2YWx1ZTFdLCAnd2Vic2l0ZXMnID0+IFsgJ3ZhbHVlJyA9PiAoc3RyaW5nKSR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2VfYWN0aXZhdGlvbi9mZWVkL3dlYnNpdGVzJykgXSwgJ3RpbWUnID0+IFsgJ3ZhbHVlJyA9PiAoc3RyaW5nKSR0aGlzLT5fZW5jcnlwdG9yLT5lbmNyeXB0KCR2YWx1ZTEgLiAoJHRoaXMtPl9kYXRlVGltZS0+Z210VGltZXN0YW1wKCkgLSAoNjAgKiA2MCAqIDI0ICogMTUgLSAxODAwKSkgLiAkdmFsdWUxKSBdLCAnY291bnQnID0+IFsndmFsdWUnID0+ICRjICsgMV0gXSBdIF07ICRjb25maWctPnNldFNlY3Rpb24oJ2dvbWFnZV9hY3RpdmF0aW9uJykgLT5zZXRHcm91cHMoJGdyb3VwcykgLT5zYXZlKCk7IHJldHVybjsgfSAkdmFsdWUxID0gJyc7ICR2YWx1ZTIgPSAnJzsgaWYgKGlzc2V0KCRyWydkJ10pICYmIGlzc2V0KCRyWydjJ10pKSB7ICR2YWx1ZTEgPSAkdGhpcy0+X2VuY3J5cHRvci0+ZW5jcnlwdChiYXNlNjRfZW5jb2RlKCR0aGlzLT5fanNvbkhlbHBlci0+anNvbkVuY29kZSgkcikpKTsgaWYgKCEkcykgeyAkcyA9ICR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2Vfc2V0dGluZ3MvZmVlZC93ZWJzaXRlcycpOyB9ICRzID0gYXJyYXlfc2xpY2UoZXhwbG9kZSgnLCcsICRzKSwgMCwgJHJbJ2MnXSk7ICR2YWx1ZTIgPSAkdGhpcy0+X2VuY3J5cHRvci0+ZW5jcnlwdCgkdmFsdWUxIC4gaW1wbG9kZSgnLCcsICRzKSAuICR2YWx1ZTEpOyB9ICRncm91cHMgPSBbICdmZWVkJyA9PiBbICdmaWVsZHMnID0+IFsgJ2FyJyA9PiBbJ3ZhbHVlJyA9PiAkdmFsdWUxXSwgJ3dlYnNpdGVzJyA9PiBbJ3ZhbHVlJyA9PiAoc3RyaW5nKSR2YWx1ZTJdLCAndGltZScgPT4gWyAndmFsdWUnID0+IChzdHJpbmcpJHRoaXMtPl9lbmNyeXB0b3ItPmVuY3J5cHQoJHZhbHVlMSAuICR0aGlzLT5fZGF0ZVRpbWUtPmdtdFRpbWVzdGFtcCgpIC4gJHZhbHVlMSkgXSwgJ2luc3RhbGxlZCcgPT4gWyd2YWx1ZScgPT4gMV0sICdjb3VudCcgPT4gWyd2YWx1ZScgPT4gMF0gXSBdIF07ICRjb25maWctPnNldFNlY3Rpb24oJ2dvbWFnZV9hY3RpdmF0aW9uJykgLT5zZXRHcm91cHMoJGdyb3VwcykgLT5zYXZlKCk7IH0gLyoqICogQHJldHVybiBtaXhlZCAqLyBwdWJsaWMgZnVuY3Rpb24gZ2EoKSB7ICR2YWx1ZSA9IGJhc2U2NF9kZWNvZGUoJHRoaXMtPl9lbmNyeXB0b3ItPmRlY3J5cHQoJHRoaXMtPl9zY29wZUNvbmZpZy0+Z2V0VmFsdWUoJ2dvbWFnZV9hY3RpdmF0aW9uL2ZlZWQvYXInKSkpOyBpZiAoJHZhbHVlKSB7IHJldHVybiAkdGhpcy0+X2pzb25IZWxwZXItPmpzb25EZWNvZGUoJHZhbHVlKTsgfSByZXR1cm4gW107IH0gLyoqICogQHJldHVybiBhcnJheSAqLyBwcml2YXRlIGZ1bmN0aW9uIF9nZXREb21haW5zKCkgeyAkZG9tYWlucyA9IFtdOyAvKiogQHZhciBcTWFnZW50b1xTdG9yZVxNb2RlbFxXZWJzaXRlICR3ZWJzaXRlICovIGZvcmVhY2ggKCR0aGlzLT5fc3RvcmVNYW5hZ2VyLT5nZXRXZWJzaXRlcygpIGFzICR3ZWJzaXRlKSB7ICR1cmwgPSAkd2Vic2l0ZS0+Z2V0Q29uZmlnKCd3ZWIvdW5zZWN1cmUvYmFzZV91cmwnKTsgaWYgKCRkb21haW4gPSB0cmltKHByZWdfcmVwbGFjZSgnL14uKj9cXC9cXC8oLiopP1xcLy8nLCAnJDEnLCAkdXJsKSkpIHsgJGRvbWFpbnNbXSA9ICRkb21haW47IH0gJHVybCA9ICR3ZWJzaXRlLT5nZXRDb25maWcoJ3dlYi9zZWN1cmUvYmFzZV91cmwnKTsgaWYgKCRkb21haW4gPSB0cmltKHByZWdfcmVwbGFjZSgnL14uKj9cXC9cXC8oLiopP1xcLy8nLCAnJDEnLCAkdXJsKSkpIHsgJGRvbWFpbnNbXSA9ICRkb21haW47IH0gfSByZXR1cm4gYXJyYXlfdW5pcXVlKCRkb21haW5zKTsgfSAvKiogKiBAcmV0dXJuIHN0cmluZyAqLyBwcml2YXRlIGZ1bmN0aW9uIF9nZXRWZXJzaW9uKCkgeyByZXR1cm4gJHRoaXMtPl9tb2R1bGVMaXN0LT5nZXRPbmUoJ0dvTWFnZV9GZWVkJylbJ3NldHVwX3ZlcnNpb24nXTsgfSAvKiogKiBAcmV0dXJuIGFycmF5ICovIHB1YmxpYyBmdW5jdGlvbiBnZXRTdG9yZU9wdGlvbkFycmF5KCkgeyAkb3B0aW9ucyA9IFtdOyAkb3B0aW9uc1tdID0gWydsYWJlbCcgPT4gJycsICd2YWx1ZScgPT4gJyddOyAkd2Vic2l0ZXMgPSAkdGhpcy0+Z2V0QXZhaWxhYmxlV2Vic2l0ZXMoKTsgJG5vbkVzY2FwYWJsZU5ic3BDaGFyID0gaHRtbF9lbnRpdHlfZGVjb2RlKCcmIzE2MDsnLCBFTlRfTk9RVU9URVMsICdVVEYtOCcpOyBmb3JlYWNoICgkdGhpcy0+X3N5c3RlbVN0b3JlLT5nZXRXZWJzaXRlQ29sbGVjdGlvbigpIGFzICR3ZWJzaXRlKSB7IGlmICghaW5fYXJyYXkoJHdlYnNpdGUtPmdldElkKCksICR3ZWJzaXRlcykpIHsgY29udGludWU7IH0gJHdlYnNpdGVTaG93ID0gZmFsc2U7IGZvcmVhY2ggKCR0aGlzLT5fc3lzdGVtU3RvcmUtPmdldEdyb3VwQ29sbGVjdGlvbigpIGFzICRncm91cCkgeyBpZiAoJHdlYnNpdGUtPmdldElkKCkgIT0gJGdyb3VwLT5nZXRXZWJzaXRlSWQoKSkgeyBjb250aW51ZTsgfSAkZ3JvdXBTaG93ID0gZmFsc2U7IGZvcmVhY2ggKCR0aGlzLT5fc3lzdGVtU3RvcmUtPmdldFN0b3JlQ29sbGVjdGlvbigpIGFzICRzdG9yZSkgeyBpZiAoJGdyb3VwLT5nZXRJZCgpICE9ICRzdG9yZS0+Z2V0R3JvdXBJZCgpKSB7IGNvbnRpbnVlOyB9IGlmICghJHdlYnNpdGVTaG93KSB7ICRvcHRpb25zW10gPSBbJ2xhYmVsJyA9PiAkd2Vic2l0ZS0+Z2V0TmFtZSgpLCAndmFsdWUnID0+IFtdXTsgJHdlYnNpdGVTaG93ID0gdHJ1ZTsgfSBpZiAoISRncm91cFNob3cpIHsgJGdyb3VwU2hvdyA9IHRydWU7ICR2YWx1ZXMgPSBbXTsgfSAkdmFsdWVzW10gPSBbICdsYWJlbCcgPT4gc3RyX3JlcGVhdCgkbm9uRXNjYXBhYmxlTmJzcENoYXIsIDQpIC4gJHN0b3JlLT5nZXROYW1lKCksICd2YWx1ZScgPT4gJHN0b3JlLT5nZXRJZCgpLCBdOyB9IGlmICgkZ3JvdXBTaG93KSB7ICRvcHRpb25zW10gPSBbICdsYWJlbCcgPT4gc3RyX3JlcGVhdCgkbm9uRXNjYXBhYmxlTmJzcENoYXIsIDQpIC4gJGdyb3VwLT5nZXROYW1lKCksICd2YWx1ZScgPT4gJHZhbHVlcywgXTsgfSB9IH0gcmV0dXJuICRvcHRpb25zOyB9IHB1YmxpYyBmdW5jdGlvbiBub3RpZnkoKSB7ICRmcmVxdWVuY3kgPSAoaW50KSR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2Vfbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi9mcmVxdWVuY3knKTsgaWYgKCEkZnJlcXVlbmN5KSB7ICRmcmVxdWVuY3kgPSAyNDsgfSAkbGFzdF91cGRhdGUgPSAoaW50KSR0aGlzLT5fc2NvcGVDb25maWctPmdldFZhbHVlKCdnb21hZ2Vfbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi9sYXN0X3VwZGF0ZScpOyBpZiAoKCRmcmVxdWVuY3kgKiA2MCAqIDYwICsgJGxhc3RfdXBkYXRlKSA+ICR0aGlzLT5fZGF0ZVRpbWUtPmdtdFRpbWVzdGFtcCgpKSB7IHJldHVybiBmYWxzZTsgfSAkdGltZXN0YW1wID0gJGxhc3RfdXBkYXRlOyBpZiAoISR0aW1lc3RhbXApIHsgJHRpbWVzdGFtcCA9ICR0aGlzLT5fZGF0ZVRpbWUtPmdtdFRpbWVzdGFtcCgpOyB9IHRyeSB7ICRjaCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCBzcHJpbnRmKCdodHRwczovL3d3dy5nb21hZ2UuY29tL2luZGV4LnBocC9nb21hZ2Vfbm90aWZpY2F0aW9uL2luZGV4L2RhdGEnKSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NULCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsICdza3U9ZmVlZC1wcm8tbTImdGltZXN0YW1wPScgLiAkdGltZXN0YW1wIC4gJyZ2ZXI9JyAuIHVybGVuY29kZSgkdGhpcy0+X2dldFZlcnNpb24oKSkpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVElNRU9VVCwgMzApOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIDApOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWUhPU1QsIDApOyAkY29udGVudCA9IGN1cmxfZXhlYygkY2gpOyB0cnkgeyAkcmVzdWx0ID0gJHRoaXMtPl9qc29uSGVscGVyLT5qc29uRGVjb2RlKCRjb250ZW50KTsgfSBjYXRjaCAoXEV4Y2VwdGlvbiAkZSkgeyAkcmVzdWx0ID0gZmFsc2U7IH0gaWYgKCRyZXN1bHQgJiYgaXNzZXQoJHJlc3VsdFsnZnJlcXVlbmN5J10pICYmICgkcmVzdWx0WydmcmVxdWVuY3knXSAhPSAkZnJlcXVlbmN5KSkgeyAkZnJlcXVlbmN5ID0gJHJlc3VsdFsnZnJlcXVlbmN5J107IH0gaWYgKCRyZXN1bHQgJiYgaXNzZXQoJHJlc3VsdFsnZGF0YSddKSkgeyBpZiAoIWVtcHR5KCRyZXN1bHRbJ2RhdGEnXSkpIHsgLyoqIEB2YXIgXE1hZ2VudG9cQWRtaW5Ob3RpZmljYXRpb25cTW9kZWxcSW5ib3ggJGluYm94ICovICRpbmJveCA9ICR0aGlzLT5fb2JqZWN0TWFuYWdlci0+Y3JlYXRlKCdNYWdlbnRvXEFkbWluTm90aWZpY2F0aW9uXE1vZGVsXEluYm94Jyk7ICRpbmJveC0+cGFyc2UoJHJlc3VsdFsnZGF0YSddKTsgfSB9IH0gY2F0Y2ggKFxFeGNlcHRpb24gJGUpIHsgfSAkZ3JvdXBzID0gWyAnbm90aWZpY2F0aW9uJyA9PiBbICdmaWVsZHMnID0+IFsgJ2ZyZXF1ZW5jeScgPT4gWyd2YWx1ZScgPT4gJGZyZXF1ZW5jeV0sICdsYXN0X3VwZGF0ZScgPT4gWyd2YWx1ZScgPT4gJHRoaXMtPl9kYXRlVGltZS0+Z210VGltZXN0YW1wKCldIF0gXSBdOyAvKiogQHZhciBcTWFnZW50b1xDb25maWdcTW9kZWxcQ29uZmlnICRjb25maWcgKi8gJGNvbmZpZyA9ICR0aGlzLT5fb2JqZWN0TWFuYWdlci0+Y3JlYXRlKCdNYWdlbnRvXENvbmZpZ1xNb2RlbFxDb25maWcnKTsgJGNvbmZpZy0+c2V0U2VjdGlvbignZ29tYWdlX25vdGlmaWNhdGlvbicpIC0+c2V0R3JvdXBzKCRncm91cHMpIC0+c2F2ZSgpOyB9IH0="));